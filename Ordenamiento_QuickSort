#include <stdio.h>

void quicksort (double v[], int izq, int dcha);
int partir (double v[], int primero, int ultimo);
void swap (double *a, double *b);
int main(){
	double vec[]={13,98,54,2,32,78};
	int i;
	printf("\n Los numeros del vector 1 son: \n");
	for (i=0; i<6; i++){
		printf("[%g] ", vec[i]);
	}
	printf("\n\n Por el metodo quicksort, los numeros son: \n\n");
	quicksort(vec, 0, 5);
	for (i=1; i<=6; i++){
		printf("[%g] ", vec[i-1]);
	}
	return 0;
}
void quicksort (double v[], int izq, int dcha)
{
	int pivote, i=1; 
	if (izq<dcha){
		pivote=partir (v, izq, dcha);
		quicksort (v, izq, pivote-1);
		quicksort (v, pivote+1, dcha);
	}
}
void swap (double *a, double *b)
{
	double tmp;
	tmp=*a;
	*a=*b;
	*b=tmp;
}
int partir (double v[], int primero, int ultimo)
{
	double pivote=v[primero]; 
	int izq=primero+1;
	int dcha=ultimo;
	
	do {
		while ((izq<=dcha) && (v[dcha]<=pivote))
		izq++;
		while ((izq<=dcha) && (v[dcha]>pivote))
		dcha--;
		if (izq<dcha){
			swap ( &(v[izq]), &(v[dcha]) );
			dcha--;
			izq++;
		}
	} while (izq<=dcha);
	swap (&(v[primero]), &(v[dcha]));
	return dcha;
}
